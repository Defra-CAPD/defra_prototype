describe("selection-buttons",function(){var e,t,c,s,o;beforeEach(function(){t=$('<label class="selectable">Small<input type="radio" name="size" id="small" value="small" /></label><label class="selectable">Medium<input type="radio" name="size" id="medium" value="medium" /></label><label class="selectable">Large<input type="radio" name="size" id="large" value="large" /></label>'),s=$('<label class="selectable">Eggs<input id="eggs" name="food" value="eggs" type="checkbox" /></label><label class="selectable">Bread<input id="bread" name="food" value="bread" type="checkbox" /></label><label class="selectable">Fruit<input id="fruit" name="food" value="fruit" type="checkbox" /></label>'),e=t.find("input"),c=s.find("input"),$radioForm=$('<form action="" method="post" />'),$checkboxForm=$('<form action="" method="post" />'),$content=$('<div id="content" />'),$radioForm.append(t),$checkboxForm.append(s),$content.append($radioForm),$content.append($checkboxForm),$(document.body).append($content)}),afterEach(function(){$content.remove()}),describe("When buttonsInstance = new GOVUK.SelectionButtons is called with a jQuery object",function(){describe("When that object contains only radio inputs",function(){describe("At the point it is called",function(){it("Should do nothing if no radios are checked",function(){o=new GOVUK.SelectionButtons(e),expect(t.eq(0).hasClass("selected")).toBe(!1),expect(t.eq(1).hasClass("selected")).toBe(!1),expect(t.eq(2).hasClass("selected")).toBe(!1)}),it("Should mark checked radios with the selected class",function(){e.eq(0).attr("checked",!0),o=new GOVUK.SelectionButtons(e),expect(t.eq(0).hasClass("selected")).toBe(!0)}),it("Should mark checked radios with the custom selected class if given",function(){e.eq(0).attr("checked",!0),o=new GOVUK.SelectionButtons(e,{selectedClass:"selectable-selected"}),expect(t.eq(0).hasClass("selectable-selected")).toBe(!0)})}),describe("If one of those radios receives focus",function(){it("Should add the focused class to that radio",function(){o=new GOVUK.SelectionButtons(e),e.eq(0).focus(),expect(t.eq(0).hasClass("focused")).toBe(!0)}),it("Should add a custom focused class to that radio if specified as an option",function(){o=new GOVUK.SelectionButtons(e,{focusedClass:"selectable-focused"}),e.eq(0).focus(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!0)})}),describe("If one of those radios loses focus",function(){it("Should remove the focused class from that radio",function(){o=new GOVUK.SelectionButtons(e),e.eq(0).focus(),expect(t.eq(0).hasClass("focused")).toBe(!0),e.eq(0).blur(),expect(t.eq(0).hasClass("focused")).toBe(!1)}),it("Should add a custom focused class to that radio if specified as an option",function(){o=new GOVUK.SelectionButtons(e,{focusedClass:"selectable-focused"}),e.eq(0).focus(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!0),e.eq(0).blur(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!1)})}),describe("If one of those radios is clicked",function(){it("Should mark that radio with the selected class",function(){o=new GOVUK.SelectionButtons(e),e.eq(0).attr("checked",!0).trigger("click"),expect(t.eq(0).hasClass("selected")).toBe(!0)}),it("Should remove the selected class from all other radios",function(){o=new GOVUK.SelectionButtons(e),t.eq(1).addClass("selected"),e.eq(0).attr("checked",!0).trigger("click"),expect(t.eq(2).hasClass("selected")).toBe(!1)})})}),describe("When that object contains only checkbox inputs",function(){describe("At the point it is called",function(){it("Should do nothing if no checkboxes are checked",function(){o=new GOVUK.SelectionButtons(c),expect(s.eq(0).hasClass("selected")).toBe(!1),expect(s.eq(1).hasClass("selected")).toBe(!1),expect(s.eq(2).hasClass("selected")).toBe(!1)}),it("Should mark checked checkboxes with the selected class",function(){c.eq(0).attr("checked",!0),o=new GOVUK.SelectionButtons(c),expect(s.eq(0).hasClass("selected")).toBe(!0)}),it("Should mark all checked checkboxes with the selected class if there are more than one",function(){c.eq(0).attr("checked",!0),c.eq(1).attr("checked",!0),o=new GOVUK.SelectionButtons(c),expect(s.eq(0).hasClass("selected")).toBe(!0),expect(s.eq(1).hasClass("selected")).toBe(!0)}),it("Should mark checked checkboxes with the custom selected class if given",function(){c.eq(0).attr("checked",!0),o=new GOVUK.SelectionButtons(c,{selectedClass:"selectable-selected"}),expect(s.eq(0).hasClass("selectable-selected")).toBe(!0)})}),describe("If one of those checkboxes receives focus",function(){it("Should add the focused class to that checkbox",function(){o=new GOVUK.SelectionButtons(c),c.eq(0).focus(),expect(s.eq(0).hasClass("focused")).toBe(!0)}),it("Should add a custom focused class to that checkbox if specified as an option",function(){o=new GOVUK.SelectionButtons(c,{focusedClass:"selectable-focused"}),c.eq(0).focus(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!0)})}),describe("If one of those checkboxes loses focus",function(){it("Should add the focused class to that checkbox",function(){o=new GOVUK.SelectionButtons(c),c.eq(0).focus(),expect(s.eq(0).hasClass("focused")).toBe(!0),c.eq(0).blur(),expect(s.eq(0).hasClass("focused")).toBe(!1)}),it("Should add a custom focused class to that checkbox if specified as an option",function(){o=new GOVUK.SelectionButtons(c,{focusedClass:"selectable-focused"}),c.eq(0).focus(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!0),c.eq(0).blur(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!1)})}),describe("If one of those checkboxes is clicked",function(){it("Should add the selected class to that checkbox",function(){o=new GOVUK.SelectionButtons(c),c.eq(0).attr("checked",!0).trigger("click"),expect(s.eq(0).hasClass("selected")).toBe(!0)}),it("Should add the selected class to that checkbox",function(){o=new GOVUK.SelectionButtons(c,{selectedClass:"selectable-selected"}),c.eq(0).attr("checked",!0).trigger("click"),expect(s.eq(0).hasClass("selectable-selected")).toBe(!0)})})}),describe("When that object contains a mixture of checkbox and radio inputs",function(){var l;beforeEach(function(){l=c.add(e)}),describe("At the point it is called",function(){it("Should do nothing if no checkboxes or radios are checked",function(){o=new GOVUK.SelectionButtons(l),expect(s.eq(0).hasClass("selected")).toBe(!1),expect(s.eq(1).hasClass("selected")).toBe(!1),expect(s.eq(2).hasClass("selected")).toBe(!1),expect(t.eq(0).hasClass("selected")).toBe(!1),expect(t.eq(1).hasClass("selected")).toBe(!1),expect(t.eq(2).hasClass("selected")).toBe(!1)}),it("Should mark checked checkboxes or radios with the selected class",function(){l.eq(0).attr("checked",!0),l.eq(3).attr("checked",!0),o=new GOVUK.SelectionButtons(l),expect(s.eq(0).hasClass("selected")).toBe(!0),expect(t.eq(0).hasClass("selected")).toBe(!0)}),it("Should mark checked checkboxes or radios with the custom selected class if given",function(){l.eq(0).attr("checked",!0),l.eq(3).attr("checked",!0),o=new GOVUK.SelectionButtons(l,{selectedClass:"selectable-selected"}),expect(s.eq(0).hasClass("selectable-selected")).toBe(!0),expect(t.eq(0).hasClass("selectable-selected")).toBe(!0)})}),describe("If a checkbox in the set receives focus",function(){it("Should add the focused class to that checkbox",function(){o=new GOVUK.SelectionButtons(l),c.eq(0).focus(),expect(s.eq(0).hasClass("focused")).toBe(!0)}),it("Should add a custom focused class to that checkbox if specified as an option",function(){o=new GOVUK.SelectionButtons(l,{focusedClass:"selectable-focused"}),c.eq(0).focus(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!0)})}),describe("If a checkbox in the set loses focus",function(){it("Should add the focused class to that checkbox",function(){o=new GOVUK.SelectionButtons(l),c.eq(0).focus(),expect(s.eq(0).hasClass("focused")).toBe(!0),c.eq(0).blur(),expect(s.eq(0).hasClass("focused")).toBe(!1)}),it("Should add a custom focused class to that checkbox if specified as an option",function(){o=new GOVUK.SelectionButtons(l,{focusedClass:"selectable-focused"}),c.eq(0).focus(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!0),c.eq(0).blur(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!1)})}),describe("If one of those checkboxes is clicked",function(){it("Should add the selected class to that checkbox",function(){o=new GOVUK.SelectionButtons(l),c.eq(0).attr("checked",!0).trigger("click"),expect(s.eq(0).hasClass("selected")).toBe(!0)}),it("Should add the selected class to that checkbox",function(){o=new GOVUK.SelectionButtons(l,{selectedClass:"selectable-selected"}),c.eq(0).attr("checked",!0).trigger("click"),expect(s.eq(0).hasClass("selectable-selected")).toBe(!0)})}),describe("If a radio in the set receives focus",function(){it("Should add the focused class to that radio",function(){o=new GOVUK.SelectionButtons(l),e.eq(0).focus(),expect(t.eq(0).hasClass("focused")).toBe(!0)}),it("Should add a custom focused class to that radio if specified as an option",function(){o=new GOVUK.SelectionButtons(l,{focusedClass:"selectable-focused"}),e.eq(0).focus(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!0)})}),describe("If a radio in the set loses focus",function(){it("Should remove the focused class from that radio",function(){o=new GOVUK.SelectionButtons(l),e.eq(0).focus(),expect(t.eq(0).hasClass("focused")).toBe(!0),e.eq(0).blur(),expect(t.eq(0).hasClass("focused")).toBe(!1)}),it("Should add a custom focused class to that radio if specified as an option",function(){o=new GOVUK.SelectionButtons(l,{focusedClass:"selectable-focused"}),e.eq(0).focus(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!0),e.eq(0).blur(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!1)})}),describe("If a radio in the set is clicked",function(){it("Should mark that radio with the selected class",function(){o=new GOVUK.SelectionButtons(l),e.eq(0).attr("checked",!0).trigger("click"),expect(t.eq(0).hasClass("selected")).toBe(!0)}),it("Should remove the selected class from all other radios",function(){o=new GOVUK.SelectionButtons(l),t.eq(1).addClass("selected"),e.eq(0).attr("checked",!0).trigger("click"),expect(t.eq(2).hasClass("selected")).toBe(!1)})})})}),describe("When new GOVUK.SelectionButtons is called with a selector",function(){describe("When that selector matches radio inputs",function(){afterEach(function(){o.destroy()}),describe("At the point it is called",function(){it("Should do nothing if no radios are checked",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),expect(t.eq(0).hasClass("selected")).toBe(!1),expect(t.eq(1).hasClass("selected")).toBe(!1),expect(t.eq(2).hasClass("selected")).toBe(!1)}),it("Should mark checked radios with the selected class",function(){e.eq(0).attr("checked",!0),o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),expect(t.eq(0).hasClass("selected")).toBe(!0)}),it("Should mark checked radios with the custom selected class if given",function(){e.eq(0).attr("checked",!0),o=new GOVUK.SelectionButtons("label.selectable input[type='radio']",{selectedClass:"selectable-selected"}),expect(t.eq(0).hasClass("selectable-selected")).toBe(!0)})}),describe("If one of those radios receives focus",function(){it("Should add the focused class to that radio",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),e.eq(0).focus(),expect(t.eq(0).hasClass("focused")).toBe(!0)}),it("Should add a custom focused class to that radio if specified as an option",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='radio']",{focusedClass:"selectable-focused"}),e.eq(0).focus(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!0)})}),describe("If one of those radios loses focus",function(){it("Should remove the focused class from that radio",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),e.eq(0).focus(),expect(t.eq(0).hasClass("focused")).toBe(!0),e.eq(0).blur(),expect(t.eq(0).hasClass("focused")).toBe(!1)}),it("Should add a custom focused class to that radio if specified as an option",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='radio']",{focusedClass:"selectable-focused"}),e.eq(0).focus(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!0),e.eq(0).blur(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!1)})}),describe("If one of those radios is clicked",function(){it("Should mark that radio with the selected class",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),e.eq(0).attr("checked",!0).trigger("click"),expect(t.eq(0).hasClass("selected")).toBe(!0)}),it("Should remove the selected class from all other radios",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),t.eq(1).addClass("selected"),e.eq(0).attr("checked",!0).trigger("click"),expect(t.eq(2).hasClass("selected")).toBe(!1)})})}),describe("When that selector matches checkbox inputs",function(){afterEach(function(){o.destroy()}),describe("At the point it is called",function(){it("Should do nothing if no checkboxes are checked",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']"),expect(s.eq(0).hasClass("selected")).toBe(!1),expect(s.eq(1).hasClass("selected")).toBe(!1),expect(s.eq(2).hasClass("selected")).toBe(!1)}),it("Should mark checked checkboxes with the selected class",function(){c.eq(0).attr("checked",!0),o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']"),expect(s.eq(0).hasClass("selected")).toBe(!0)}),it("Should mark all checked checkboxes with the selected class if there are more than one",function(){c.eq(0).attr("checked",!0),c.eq(1).attr("checked",!0),o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']"),expect(s.eq(0).hasClass("selected")).toBe(!0),expect(s.eq(1).hasClass("selected")).toBe(!0)}),it("Should mark checked checkboxes with the custom selected class if given",function(){c.eq(0).attr("checked",!0),o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']",{selectedClass:"selectable-selected"}),expect(s.eq(0).hasClass("selectable-selected")).toBe(!0)})}),describe("If one of those checkboxes receives focus",function(){it("Should add the focused class to that checkbox",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']"),c.eq(0).focus(),expect(s.eq(0).hasClass("focused")).toBe(!0)}),it("Should add a custom focused class to that checkbox if specified as an option",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']",{focusedClass:"selectable-focused"}),c.eq(0).focus(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!0)})}),describe("If one of those checkboxes loses focus",function(){it("Should add the focused class to that checkbox",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']"),c.eq(0).focus(),expect(s.eq(0).hasClass("focused")).toBe(!0),c.eq(0).blur(),expect(s.eq(0).hasClass("focused")).toBe(!1)}),it("Should add a custom focused class to that checkbox if specified as an option",function(){o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']",{focusedClass:"selectable-focused"}),c.eq(0).focus(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!0),c.eq(0).blur(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!1)})})}),describe("When that selector matches a mixture of checkbox and radio inputs",function(){var l;beforeEach(function(){l=c.add(e)}),afterEach(function(){o.destroy()}),it("Should do nothing if no checkboxes or radios are checked",function(){o=new GOVUK.SelectionButtons("label.selectable input"),expect(s.eq(0).hasClass("selected")).toBe(!1),expect(s.eq(1).hasClass("selected")).toBe(!1),expect(s.eq(2).hasClass("selected")).toBe(!1),expect(t.eq(0).hasClass("selected")).toBe(!1),expect(t.eq(1).hasClass("selected")).toBe(!1),expect(t.eq(2).hasClass("selected")).toBe(!1)}),it("Should mark checked checkboxes or radios with the selected class",function(){l.eq(0).attr("checked",!0),l.eq(3).attr("checked",!0),o=new GOVUK.SelectionButtons("label.selectable input"),expect(s.eq(0).hasClass("selected")).toBe(!0),expect(t.eq(0).hasClass("selected")).toBe(!0)}),it("Should mark checked checkboxes or radios with the custom selected class if given",function(){l.eq(0).attr("checked",!0),l.eq(3).attr("checked",!0),o=new GOVUK.SelectionButtons("label.selectable input",{selectedClass:"selectable-selected"}),expect(s.eq(0).hasClass("selectable-selected")).toBe(!0),expect(t.eq(0).hasClass("selectable-selected")).toBe(!0)})})}),describe("When GOVUK.SelectionButtons is called with a selector and then the page content is replaced",function(){describe("When that selector matches radio inputs",function(){describe("If one of those radios is clicked",function(){afterEach(function(){o.destroy()}),it("Should mark that radio with the selected class",function(){var e;o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),e=$("#content").html(),$("#content").html(""),$("#content").html(e),$("label.selectable input[type='radio']").eq(0).attr("checked",!0).trigger("click"),expect($("label.selectable input[type='radio']").eq(0).parent("label").hasClass("selected")).toBe(!0)}),it("Should remove the selected class from all other radios",function(){var c;o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),c=$("#content").html(),$("#content").html(""),$("#content").html(c),e=$("label.selectable input[type='radio']"),t=e.parent("label"),t.eq(1).addClass("selected"),e.eq(0).attr("checked",!0).trigger("click"),expect(t.eq(2).hasClass("selected")).toBe(!1)})}),describe("If one of those radios is focused",function(){afterEach(function(){o.destroy()}),it("Should add the focused class to the radio",function(){var c;o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),c=$("#content").html(),$("#content").html(""),$("#content").html(c),e=$("label.selectable input[type='radio']"),t=e.parent("label"),e.eq(0).focus(),expect(t.eq(0).hasClass("focused")).toBe(!0)}),it("Should add a custom focused class to the radio if sent in as an option",function(){var c;o=new GOVUK.SelectionButtons("label.selectable input[type='radio']",{focusedClass:"selectable-focused"}),c=$("#content").html(),$("#content").html(""),$("#content").html(c),e=$("label.selectable input[type='radio']"),t=e.parent("label"),e.eq(0).focus(),expect(t.eq(0).hasClass("selectable-focused")).toBe(!0)}),it("Should remove the focused class from a radio when it loses focus",function(){var c;o=new GOVUK.SelectionButtons("label.selectable input[type='radio']"),c=$("#content").html(),$("#content").html(""),$("#content").html(c),e=$("label.selectable input[type='radio']"),t=e.parent("label"),e.eq(0).focus(),expect(t.eq(0).hasClass("focused")).toBe(!0),e.eq(0).blur(),expect(t.eq(0).hasClass("focused")).toBe(!1)})})}),describe("When that selector matches checkbox inputs",function(){describe("If one of those checkboxes is clicked",function(){afterEach(function(){o.destroy()}),it("Should add the selected class to the checkbox",function(){var e;o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']"),e=$("#content").html(),$("#content").html(""),$("#content").html(e),$("label.selectable input[type='checkbox']").eq(0).attr("checked",!0).trigger("click"),expect($("label.selectable input[type='checkbox']").eq(0).parent("label").hasClass("selected")).toBe(!0)})}),describe("If one of those checkboxes is focused",function(){afterEach(function(){o.destroy()}),it("Should add the focused class to the checkbox",function(){var e;o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']"),e=$("#content").html(),$("#content").html(""),$("#content").html(e),c=$("label.selectable input[type='checkbox']"),s=c.parent("label"),c.eq(0).focus(),expect(s.eq(0).hasClass("focused")).toBe(!0)}),it("Should add a custom focused class to the checkbox if sent in as an option",function(){var e;o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']",{focusedClass:"selectable-focused"}),e=$("#content").html(),$("#content").html(""),$("#content").html(e),c=$("label.selectable input[type='checkbox']"),s=c.parent("label"),c.eq(0).focus(),expect(s.eq(0).hasClass("selectable-focused")).toBe(!0)}),it("Should remove the focused class from the checkbox when it loses focus",function(){var e;o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']"),e=$("#content").html(),$("#content").html(""),$("#content").html(e),c=$("label.selectable input[type='checkbox']"),s=c.parent("label"),c.eq(0).focus(),expect(s.eq(0).hasClass("focused")).toBe(!0),c.eq(0).blur(),expect(s.eq(0).hasClass("focused")).toBe(!1)})})})}),describe("GOVUK.SelectionButtons.prototype.destroy",function(){it("Should remove the events bound to the jQuery-wrapped elements sent into GOVUK.SelectionButtons",function(){var t=!1,c=!1,s=!1,l=!1;spyOn($.fn,"on").andCallFake(function(s,o){return this===e&&("click"===s&&(t=o),"focus blur"===s&&(c=o)),this}),spyOn($.fn,"off").andCallFake(function(t,c){return this===e&&("click"===t&&(s=c),"focus blur"===t&&(l=c)),this}),o=new GOVUK.SelectionButtons(e),expect(t).not.toBe(!1),expect(c).not.toBe(!1),o.destroy(),expect(s).toEqual(t),expect(l).toEqual(c)}),it("Should remove the events bound to the document for the selector was sent into GOVUK.SelectionButtons",function(){var e=!1,t=!1,c=!1,s=!1;spyOn($.fn,"on").andCallFake(function(c,s,o){return this[0]===document&&"label.selectable input[type='checkbox']"===s&&("click"===c&&(e=o),"focus blur"===c&&(t=o)),this}),spyOn($.fn,"off").andCallFake(function(e,t,o){return this[0]===document&&"label.selectable input[type='checkbox']"===t&&("click"===e&&(c=o),"focus blur"===e&&(s=o)),this}),o=new GOVUK.SelectionButtons("label.selectable input[type='checkbox']"),expect(e).not.toBe(!1),expect(t).not.toBe(!1),o.destroy(),expect(c).toEqual(e),expect(s).toEqual(t)})})});